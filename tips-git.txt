### git ###

# create a new repository
git init

# add a file to the repository
- edit a file

# status
git status

# add to staging area
git add <filename>
 or
git add --all
 or
git add *
 or
git add /static/*.css

# ignore certain files ...
- create .gitignore
- add list of files - either filenames or filetypes or directories
- if you have git active, you need to update git.
    git add .
    git rm -r --cached .
    git add .
    - optional:
    git commit -m "fixed untracked files"
    git push

# commit
git commit -m "..."

# stage & commit
git commit -am "..."

# push to github - not yet listed in github
- github.com - create repository, but choose push an existing repository
echo "# <project name>" >> README.md
- edit the README.md and tidy up - remove spaces/quotes/etc
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/zblackbirdz/<repository-name>.git
git push -u origin master

# push to github
git push

# pull from github
git pull

## branches ...

# list branches
git branch

# new branch
git branch <new-branch>

# new branch & switch to it
git checkout -b <new-branch>

# switch branch
git check out <branch-name>

# delete a local branch
git branch -d <branch-name>


# merge branches. see: https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging
git checkout master
git merge <branch-name>
git commit ...

git checkout master
git pull origin master
git merge <branch-name>
git push origin master

# messed up the merged and you've reverted back. however, you cannot update the remote ...
git push origin <branch> -f
#then update master
git checkout master
git merge <other branch>
git status
git add .
git commit -m "..."
git push
# now update <other branch>
git check <other branch>
git rebase <master branch>
git push
